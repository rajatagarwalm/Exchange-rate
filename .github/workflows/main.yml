name: Build and Push Docker Image to ECR

on:
  push:
    branches:
      - main

jobs:
  build_and_push_image:
    name: Build, Tag, Scan and Push Docker Image
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: '${{ secrets.DOCKER_USERNAME }}'
          password: '${{ secrets.DOCKER_PASSWORD }}'

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Trim GitHub SHA to 5 characters
        id: trim-sha
        run: echo "::set-output name=TRIMMED_SHA::${GITHUB_SHA::5}"

      - name: Create Image 
        run: |
          docker build -t ${{ steps.login-ecr.outputs.registry }}/exchange_rate:exchange_rate_${{ steps.trim-sha.outputs.TRIMMED_SHA }} .

      - name: Install Trivy and jq
        run: |
          wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
          echo "deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main" | sudo tee -a /etc/apt/sources.list.d/trivy.list
          sudo apt-get update && sudo apt-get install -y trivy jq

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        id: scan-image
        with:
          image-ref: '${{ steps.login-ecr.outputs.registry }}/exchange_rate:exchange_rate_${{ steps.trim-sha.outputs.TRIMMED_SHA }}'
          format: 'json'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          ignore-file: '.trivyignore'

      - name: Check Trivy scan results
        run: |
          if grep -q '"Severity":"CRITICAL"' "${{ steps.scan-image.outputs.trivy-json }}" ; then
            echo "Critical vulnerabilities found, stopping workflow."
            exit 1
          fi

      - name: Build, tag, and push image to Amazon ECR
        run: docker push ${{ steps.login-ecr.outputs.registry }}/exchange_rate:exchange_rate_${{ steps.trim-sha.outputs.TRIMMED_SHA }}
